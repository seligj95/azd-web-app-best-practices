param location string
param resourceToken string
param tags object

@description('The SKU of App Service Plan.')
param sku string = 'P1v3'

@description('OS of your Azure App Service plan.')
@allowed([
  'Windows'
  'Linux'
  'Windows Container'
])
param appServicePlanHostingOS string = 'Linux'

@description('The Runtime stack of current web app')
param linuxFxVersion string = 'PYTHON|3.12'

@description('The allowed IP/CIDR defines what is allowed to access the app. This should be restricted to your client IP for example. Leaving it as the default makes your app publicly accessible.')
param allowedIps string = '0.0.0.0/0'

resource virtualNetwork 'Microsoft.Network/virtualNetworks@2024-03-01' = {
  name: 'vnet-${resourceToken}'
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
    subnets: [
      {
        name: 'subnet-${resourceToken}'
        properties: {
          addressPrefix: '10.0.0.0/24'
          delegations: [
            {
              name: 'delegation'
              properties: {
                serviceName: 'Microsoft.Web/serverFarms'
              }
            }
          ]
        }
      }
    ]
  }
}

resource appUserManagedIdentity 'Microsoft.ManagedIdentity/userAssignedIdentities@2023-07-31-preview' = {
  name: 'umi-${resourceToken}'
  location: location
}

resource appServicePlan 'Microsoft.Web/serverfarms@2022-03-01' = {
  name: 'plan-${resourceToken}'
  location: location
  sku: {
    name: sku
    capacity: 3
  }
  properties: {
    reserved: appServicePlanHostingOS == 'Linux' ? true : false
    hyperV: appServicePlanHostingOS == 'Windows Container' ? true : false
    zoneRedundant: true
    elasticScaleEnabled: true
    maximumElasticWorkerCount: 30
  }
}

resource webApp 'Microsoft.Web/sites@2024-04-01' = {
  name: 'app-${resourceToken}'
  location: location
  tags: union(tags, { 'azd-service-name': 'web' })
  properties: {
    serverFarmId: appServicePlan.id
    virtualNetworkSubnetId: virtualNetwork.properties.subnets[0].id
    vnetRouteAllEnabled: true
    vnetBackupRestoreEnabled: true
    vnetContentShareEnabled: true
    vnetImagePullEnabled: true
    httpsOnly: true
    endToEndEncryptionEnabled: true
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    sshEnabled: false
    ipMode: 'IPv4AndIPv6'
    publicNetworkAccess: 'Enabled'
    siteConfig: {
      linuxFxVersion: linuxFxVersion
      minTlsVersion: '1.3'
      minTlsCipherSuite: 'TLS_AES_256_GCM_SHA384'
      scmMinTlsVersion: '1.3'
      ftpsState: 'Disabled'
      http20Enabled: true
      remoteDebuggingEnabled: false
      antivirusScanEnabled: true
      ipSecurityRestrictions: [
        {
          ipAddress: allowedIps
          action: 'Allow'
          priority: 100
          name: 'Allowed IPs'
        }
      ]
      ipSecurityRestrictionsDefaultAction: 'Deny'
      scmIpSecurityRestrictionsDefaultAction: 'Deny'
      scmIpSecurityRestrictionsUseMain: true
    }
  }
  identity: {
    type: 'UserAssigned'
    userAssignedIdentities: {
      '${appUserManagedIdentity.id}': {}
    }
  }
  resource appSettings 'config' = {
    name: 'appsettings'
    properties: {
      SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
    }
  }
  dependsOn: [
    logAnalyticsWorkspace
  ]
}

resource ftpPolicy 'Microsoft.Web/sites/basicPublishingCredentialsPolicies@2024-04-01' = {
  name: 'ftp'
  location: location
  kind: 'string'
  parent: webApp
  properties: {
    allow: false
  }
}

resource scmPolicy 'Microsoft.Web/sites/basicPublishingCredentialsPolicies@2024-04-01' = {
  name: 'scm'
  location: location
  kind: 'string'
  parent: webApp
  properties: {
    allow: true
  }
}

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2023-09-01' = {
  name: 'loganalytics-${resourceToken}'
  location: location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
    retentionInDays: 120
    features: {
      searchVersion: 1
      legacy: 0
      enableLogAccessUsingOnlyResourcePermissions: true
    }
  }
}

resource setting 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: 'diagnnosticsetting-${resourceToken}'
  scope: webApp
  properties: {
    workspaceId: logAnalyticsWorkspace.id
    logs: [
      {
        category: 'AppServiceAntivirusScanAuditLogs'
        enabled: true
      }
      {
        category: 'AppServiceHTTPLogs'
        enabled: true
      }
      {
        category: 'AppServiceConsoleLogs'
        enabled: true
      }
      {
        category: 'AppServiceAppLogs'
        enabled: true
      }
      {
        category: 'AppServiceFileAuditLogs'
        enabled: true
      }
      {
        category: 'AppServiceAuditLogs'
        enabled: true
      }
      {
        category: 'AppServiceIPSecAuditLogs'
        enabled: true
      }
      {
        category: 'AppServicePlatformLogs'
        enabled: true
      }
      {
        category: 'AppServiceAuthenticationLogs'
        enabled: true
      }
    ]
    metrics: [
      {
        category: 'AllMetrics'
        enabled: true
      }
    ]
  }
}

resource webAppSlot 'Microsoft.Web/sites/slots@2024-04-01' = {
  parent: webApp
  name: 'stage'
  location: location
  properties: {
    serverFarmId: appServicePlan.id
    virtualNetworkSubnetId: virtualNetwork.properties.subnets[0].id
    vnetRouteAllEnabled: true
    vnetBackupRestoreEnabled: true
    vnetContentShareEnabled: true
    vnetImagePullEnabled: true
    httpsOnly: true
    endToEndEncryptionEnabled: true
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    sshEnabled: false
    ipMode: 'IPv4AndIPv6'
    publicNetworkAccess: 'Enabled'
    siteConfig: {
      linuxFxVersion: linuxFxVersion
      minTlsVersion: '1.3'
      minTlsCipherSuite: 'TLS_AES_256_GCM_SHA384'
      scmMinTlsVersion: '1.3'
      ftpsState: 'Disabled'
      http20Enabled: true
      remoteDebuggingEnabled: false
      antivirusScanEnabled: true
      ipSecurityRestrictions: [
        {
          ipAddress: allowedIps
          action: 'Allow'
          priority: 100
          name: 'Allowed IPs'
        }
      ]
      ipSecurityRestrictionsDefaultAction: 'Deny'
      scmIpSecurityRestrictionsDefaultAction: 'Deny'
      scmIpSecurityRestrictionsUseMain: true
    }
  }
  identity: {
    type: 'UserAssigned'
    userAssignedIdentities: {
      '${appUserManagedIdentity.id}': {}
    }
  }
  resource appSettings 'config' = {
    name: 'appsettings'
    properties: {
      SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
    }
  }
}

resource ftpPolicySlot 'Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies@2022-03-01' = {
  name: 'ftp'
  location: location
  kind: 'string'
  parent: webAppSlot
  properties: {
    allow: false
  }
}

resource scmPolicySlot 'Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies@2022-03-01' = {
  name: 'scm'
  location: location
  kind: 'string'
  parent: webAppSlot
  properties: {
    allow: false
  }
}

output WEB_URI string = 'https://${webApp.properties.defaultHostName}'
